> express@4.16.3 test-ci /home/travis/build/expressjs/express
> istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/
  Route
    ✓ should work without handlers
    .all
      ✓ should add handler
      ✓ should handle VERBS
      ✓ should stack
    .VERB
      ✓ should support .get
      ✓ should limit to just .VERB
      ✓ should allow fallthrough
    errors
      ✓ should handle errors via arity 4 functions
      ✓ should handle throw
      ✓ should handle throwing inside error handlers
      ✓ should handle throw in .all
      ✓ should handle single error handler
  Router
    ✓ should return a function with router methods
    ✓ should support .use of other routers
    ✓ should support dynamic routes
    ✓ should handle blank URL
    ✓ should handle missing URL
    ✓ should not stack overflow with many registered routes (477ms)
    .handle
      ✓ should dispatch
    .multiple callbacks
      ✓ should throw if a callback is null
      ✓ should throw if a callback is undefined
      ✓ should throw if a callback is not a function
      ✓ should not throw if all callbacks are functions
    error
      ✓ should skip non error middleware
      ✓ should handle throwing inside routes with params
      ✓ should handle throwing in handler after async param
      ✓ should handle throwing inside error handlers
    FQDN
      ✓ should not obscure FQDNs
      ✓ should ignore FQDN in search
      ✓ should ignore FQDN in path
      ✓ should adjust FQDN req.url
      ✓ should adjust FQDN req.url with multiple handlers
      ✓ should adjust FQDN req.url with multiple routed handlers
    .all
      ✓ should support using .all to capture all http verbs
      ✓ should be called for any URL when "*"
    .use
      ✓ should require middleware
      ✓ should reject string as middleware
      ✓ should reject number as middleware
      ✓ should reject null as middleware
      ✓ should reject Date as middleware
      ✓ should be called for any URL
      ✓ should accept array of middleware
    .param
      ✓ should call param function when routing VERBS
      ✓ should call param function when routing middleware
      ✓ should only call once per request
      ✓ should call when values differ
    parallel requests
      ✓ should not mix requests (51ms)
  app.all()
    ✓ should add a router per method (45ms)
    ✓ should run the callback for a method just once
  app.del()
    ✓ should alias app.delete()
  app
    .engine(ext, fn)
      ✓ should map a template engine
      ✓ should throw when the callback is missing
      ✓ should work without leading "."
      ✓ should work "view engine" setting
      ✓ should work "view engine" with leading "."
  HEAD
    ✓ should default to GET
    ✓ should output the same headers as GET requests
  app.head()
    ✓ should override
  app
    ✓ should inherit from event emitter
    ✓ should be callable
    ✓ should 404 without routes
  app.parent
    ✓ should return the parent when mounted
  app.mountpath
    ✓ should return the mounted path
  app.router
    ✓ should throw with notice
  app.path()
    ✓ should return the canonical
  in development
    ✓ should disable "view cache"
  in production
    ✓ should enable "view cache"
  without NODE_ENV
    ✓ should default to development
  app.listen()
    ✓ should wrap with an HTTP server
  app
    .locals(obj)
      ✓ should merge locals
    .locals.settings
      ✓ should expose app settings
  OPTIONS
    ✓ should default to the routes defined
    ✓ should only include each method once
    ✓ should not be affected by app.all
    ✓ should not respond if the path is not defined
    ✓ should forward requests down the middleware chain
    when error occurs in response handler
      ✓ should pass error to callback
  app.options()
    ✓ should override the default behavior
  app
    .param(fn)
      ✓ should map app.param(name, ...) logic
      ✓ should fail if not given fn
    .param(names, fn)
      ✓ should map the array
    .param(name, fn)
      ✓ should map logic for a single param
      ✓ should only call once per request
      ✓ should call when values differ
      ✓ should support altering req.params across routes
      ✓ should not invoke without route handler
      ✓ should work with encoded values
      ✓ should catch thrown error
      ✓ should catch thrown secondary error
      ✓ should defer to next route
      ✓ should defer all the param routes
      ✓ should not call when values differ on error
      ✓ should call when values differ when using "next"
  app
    .render(name, fn)
      ✓ should support absolute paths
      ✓ should support absolute paths with "view engine"
      ✓ should expose app.locals
      ✓ should support index.<engine>
      ✓ should handle render error throws
      when the file does not exist
        ✓ should provide a helpful error
      when an error occurs
        ✓ should invoke the callback
      when an extension is given
        ✓ should render the template
      when "view engine" is given
        ✓ should render the template
      when "views" is given
        ✓ should lookup the file in the path
        when array of paths
          ✓ should lookup the file in the path
          ✓ should lookup in later paths until found
          ✓ should error if file does not exist
      when a "view" constructor is given
        ✓ should create an instance of it
      caching
        ✓ should always lookup view without cache
        ✓ should cache with "view cache" setting
    .render(name, options, fn)
      ✓ should render the template
      ✓ should expose app.locals
      ✓ should give precedence to app.render() locals
      caching
        ✓ should cache with cache option
  app
    .request
      ✓ should extend the request prototype
  app
    .response
      ✓ should extend the response prototype
      ✓ should not be influenced by other app protos
  app.route
    ✓ should return a new route
    ✓ should all .VERB after .all
    ✓ should support dynamic routes
    ✓ should not error on empty routes
  app.router
    ✓ should restore req.params after leaving router
    ✓ should be .use()able
    ✓ should allow escaped regexp
    ✓ should allow literal "."
    ✓ should allow rewriting of the url
    ✓ should run in order added
    ✓ should be chainable
    methods
      ✓ should include ACL
      ✓ should reject numbers for app.acl
      ✓ should include BIND
      ✓ should reject numbers for app.bind
      ✓ should include CHECKOUT
      ✓ should reject numbers for app.checkout
      ✓ should include COPY
      ✓ should reject numbers for app.copy
      ✓ should include DELETE
      ✓ should reject numbers for app.delete
      ✓ should include GET
      ✓ should reject numbers for app.get
      ✓ should include HEAD
      ✓ should reject numbers for app.head
      ✓ should include LINK
      ✓ should reject numbers for app.link
      ✓ should include LOCK
      ✓ should reject numbers for app.lock
      ✓ should include M-SEARCH
      ✓ should reject numbers for app.m-search
      ✓ should include MERGE
      ✓ should reject numbers for app.merge
      ✓ should include MKACTIVITY
      ✓ should reject numbers for app.mkactivity
      ✓ should include MKCALENDAR
      ✓ should reject numbers for app.mkcalendar
      ✓ should include MKCOL
      ✓ should reject numbers for app.mkcol
      ✓ should include MOVE
      ✓ should reject numbers for app.move
      ✓ should include NOTIFY
      ✓ should reject numbers for app.notify
      ✓ should include OPTIONS
      ✓ should reject numbers for app.options
      ✓ should include PATCH
      ✓ should reject numbers for app.patch
      ✓ should include POST
      ✓ should reject numbers for app.post
      ✓ should include PROPFIND (14ms)
      ✓ should reject numbers for app.propfind
      ✓ should include PROPPATCH
      ✓ should reject numbers for app.proppatch
      ✓ should include PURGE
      ✓ should reject numbers for app.purge
      ✓ should include PUT
      ✓ should reject numbers for app.put
      ✓ should include REBIND (12ms)
      ✓ should reject numbers for app.rebind
      ✓ should include REPORT
      ✓ should reject numbers for app.report
      ✓ should include SEARCH
      ✓ should reject numbers for app.search
      ✓ should include SUBSCRIBE
      ✓ should reject numbers for app.subscribe
      ✓ should include TRACE
      ✓ should reject numbers for app.trace
      ✓ should include UNBIND
      ✓ should reject numbers for app.unbind
      ✓ should include UNLINK
      ✓ should reject numbers for app.unlink
      ✓ should include UNLOCK
      ✓ should reject numbers for app.unlock
      ✓ should include UNSUBSCRIBE
      ✓ should reject numbers for app.unsubscribe
      ✓ should include DEL
      ✓ should reject numbers for app.del
      ✓ should re-route when method is altered
    decode params
      ✓ should decode correct params
      ✓ should not accept params in malformed paths
      ✓ should not decode spaces
      ✓ should work with unicode
    when given a regexp
      ✓ should match the pathname only
      ✓ should populate req.params with the captures
    case sensitivity
      ✓ should be disabled by default
      when "case sensitive routing" is enabled
        ✓ should match identical casing
        ✓ should not match otherwise
    params
      ✓ should overwrite existing req.params by default
      ✓ should allow merging existing req.params
      ✓ should use params from router
      ✓ should merge numeric indices req.params
      ✓ should merge numeric indices req.params when more in parent
      ✓ should merge numeric indices req.params when parent has same number
      ✓ should ignore invalid incoming req.params
      ✓ should restore req.params
    trailing slashes
      ✓ should be optional by default
      when "strict routing" is enabled
        ✓ should match trailing slashes
        ✓ should pass-though middleware
        ✓ should pass-though mounted middleware
        ✓ should match no slashes
        ✓ should match middleware when omitting the trailing slash
        ✓ should match middleware
        ✓ should match middleware when adding the trailing slash
        ✓ should fail when omitting the trailing slash
        ✓ should fail when adding the trailing slash
    *
      ✓ should capture everything
      ✓ should decore the capture
      ✓ should denote a greedy capture group
      ✓ should work with several
      ✓ should work cross-segment (11ms)
      ✓ should allow naming
      ✓ should not be greedy immediately after param
      ✓ should eat everything after /
      ✓ should span multiple segments
      ✓ should be optional
      ✓ should require a preceding /
      ✓ should keep correct parameter indexes
      ✓ should work within arrays
    :name
      ✓ should denote a capture group
      ✓ should match a single segment only
      ✓ should allow several capture groups
      ✓ should work following a partial capture group (18ms)
      ✓ should work inside literal parenthesis
      ✓ should work in array of paths
    :name?
      ✓ should denote an optional capture group (15ms)
      ✓ should populate the capture group
    .:name
      ✓ should denote a format
    .:name?
      ✓ should denote an optional format
    when next() is called
      ✓ should continue lookup
    when next("route") is called
      ✓ should jump to next route
    when next("router") is called
      ✓ should jump out of router
    when next(err) is called
      ✓ should break out of app.router
      ✓ should call handler in same route, if exists
  app
    .VERB()
      ✓ should not get invoked without error handler on error
      ✓ should only call an error handling routing callback when an error is propagated
  app
    ✓ should emit "mount" when mounted
    .use(app)
      ✓ should mount the app
      ✓ should support mount-points
      ✓ should set the child's .parent
      ✓ should support dynamic routes
      ✓ should support mounted app anywhere
    .use(middleware)
      ✓ should accept multiple arguments
      ✓ should invoke middleware for all requests
      ✓ should accept array of middleware
      ✓ should accept multiple arrays of middleware
      ✓ should accept nested arrays of middleware
    .use(path, middleware)
      ✓ should require middleware
      ✓ should reject string as middleware
      ✓ should reject number as middleware
      ✓ should reject null as middleware
      ✓ should reject Date as middleware
      ✓ should strip path from req.url
      ✓ should accept multiple arguments
      ✓ should invoke middleware for all requests starting with path
      ✓ should work if path has trailing slash
      ✓ should accept array of middleware
      ✓ should accept multiple arrays of middleware
      ✓ should accept nested arrays of middleware
      ✓ should support array of paths
      ✓ should support array of paths with middleware array
      ✓ should support regexp path
      ✓ should support empty string path
  config
    .set()
      ✓ should set a value
      ✓ should return the app
      ✓ should return the app when undefined
      "etag"
        ✓ should throw on bad value
        ✓ should set "etag fn"
      "trust proxy"
        ✓ should set "trust proxy fn"
    .get()
      ✓ should return undefined when unset
      ✓ should otherwise return the value
      when mounted
        ✓ should default to the parent app
        ✓ should given precedence to the child
        ✓ should inherit "trust proxy" setting
        ✓ should prefer child "trust proxy" setting
    .enable()
      ✓ should set the value to true
    .disable()
      ✓ should set the value to false
    .enabled()
      ✓ should default to false
      ✓ should return true when set
    .disabled()
      ✓ should default to true
      ✓ should return false when set
  exports
    ✓ should expose Router
    ✓ should expose the application prototype
    ✓ should expose the request prototype
    ✓ should expose the response prototype
    ✓ should permit modifying the .application prototype
    ✓ should permit modifying the .request prototype
    ✓ should permit modifying the .response prototype
    ✓ should throw on old middlewares
  middleware
    .next()
      ✓ should behave like connect
  throw after .end()
    ✓ should fail gracefully
  req
    ✓ should accept an argument list of type names
    .accepts(type)
      ✓ should return true when Accept is not present
      ✓ should return true when present
      ✓ should return false otherwise
    .accepts(types)
      ✓ should return the first when Accept is not present
      ✓ should return the first acceptable type
      ✓ should return false when no match is made
      ✓ should take quality into account
      ✓ should return the first acceptable type with canonical mime types
  req
    .acceptsCharset(type)
      when Accept-Charset is not present
        ✓ should return true
      when Accept-Charset is not present
        ✓ should return true when present
        ✓ should return false otherwise
  req
    .acceptsCharsets(type)
      when Accept-Charset is not present
        ✓ should return true
      when Accept-Charset is not present
        ✓ should return true when present
        ✓ should return false otherwise
  req
    .acceptsEncoding
      ✓ should be true if encoding accepted
      ✓ should be false if encoding not accepted
  req
    .acceptsEncodingss
      ✓ should be true if encoding accepted
      ✓ should be false if encoding not accepted
  req
    .acceptsLanguage
      ✓ should be true if language accepted
      ✓ should be false if language not accepted
      when Accept-Language is not present
        ✓ should always return true
  req
    .acceptsLanguages
      ✓ should be true if language accepted
      ✓ should be false if language not accepted
      when Accept-Language is not present
        ✓ should always return true
  req
    .baseUrl
      ✓ should be empty for top-level route
      ✓ should contain lower path
      ✓ should contain full lower path
      ✓ should travel through routers correctly
  req
    .fresh
      ✓ should return true when the resource is not modified
      ✓ should return false when the resource is modified (13ms)
      ✓ should return false without response headers
  req
    .get(field)
      ✓ should return the header field value
      ✓ should special-case Referer
      ✓ should throw missing header name
      ✓ should throw for non-string header name
  req
    .host
      ✓ should return the Host when present
      ✓ should strip port number
      ✓ should return undefined otherwise
      ✓ should work with IPv6 Host
      ✓ should work with IPv6 Host and port
      when "trust proxy" is enabled
        ✓ should respect X-Forwarded-Host
        ✓ should ignore X-Forwarded-Host if socket addr not trusted
        ✓ should default to Host
        when trusting hop count
          ✓ should respect X-Forwarded-Host
      when "trust proxy" is disabled
        ✓ should ignore X-Forwarded-Host
  req
    .hostname
      ✓ should return the Host when present
      ✓ should strip port number
      ✓ should return undefined otherwise
      ✓ should work with IPv6 Host
      ✓ should work with IPv6 Host and port
      when "trust proxy" is enabled
        ✓ should respect X-Forwarded-Host
        ✓ should ignore X-Forwarded-Host if socket addr not trusted
        ✓ should default to Host
      when "trust proxy" is disabled
        ✓ should ignore X-Forwarded-Host
  req
    .ip
      when X-Forwarded-For is present
        when "trust proxy" is enabled
          ✓ should return the client addr
          ✓ should return the addr after trusted proxy
          ✓ should return the addr after trusted proxy, from sub app
        when "trust proxy" is disabled
          ✓ should return the remote address
      when X-Forwarded-For is not present
        ✓ should return the remote address
  req
    .ips
      when X-Forwarded-For is present
        when "trust proxy" is enabled
          ✓ should return an array of the specified addresses
          ✓ should stop at first untrusted
        when "trust proxy" is disabled
          ✓ should return an empty array
      when X-Forwarded-For is not present
        ✓ should return []
  req.is()
    when given a mime type
      ✓ should return the type when matching
      ✓ should return false when not matching
      ✓ should ignore charset
    when content-type is not present
      ✓ should return false
    when given an extension
      ✓ should lookup the mime type
    when given */subtype
      ✓ should return the full type when matching
      ✓ should return false when not matching
      ✓ should ignore charset
    when given type/*
      ✓ should return the full type when matching
      ✓ should return false when not matching
      ✓ should ignore charset
  req
    .param(name, default)
      ✓ should use the default value unless defined
    .param(name)
      ✓ should check req.query
      ✓ should check req.body (16ms)
      ✓ should check req.params
  req
    .path
      ✓ should return the parsed pathname
  req
    .protocol
      ✓ should return the protocol string
      when "trust proxy" is enabled
        ✓ should respect X-Forwarded-Proto
        ✓ should default to the socket addr if X-Forwarded-Proto not present
        ✓ should ignore X-Forwarded-Proto if socket addr not trusted
        ✓ should default to http
        when trusting hop count
          ✓ should respect X-Forwarded-Proto
      when "trust proxy" is disabled
        ✓ should ignore X-Forwarded-Proto
  req
    .query
      ✓ should default to {}
      ✓ should default to parse complex keys
      when "query parser" is extended
        ✓ should parse complex keys
        ✓ should parse parameters with dots
      when "query parser" is simple
        ✓ should not parse complex keys
      when "query parser" is a function
        ✓ should parse using function
      when "query parser" disabled
        ✓ should not parse query
      when "query parser" disabled
        ✓ should not parse complex keys
      when "query parser fn" is missing
        ✓ should act like "extended"
      when "query parser" an unknown value
        ✓ should throw
  req
    .range(size)
      ✓ should return parsed ranges
      ✓ should cap to the given size
      ✓ should cap to the given size when open-ended
      ✓ should have a .type
      ✓ should accept any type
      ✓ should return undefined if no range
    .range(size, options)
      with "combine: true" option
        ✓ should return combined ranges
  req
    .route
      ✓ should be the executed Route
  req
    .secure
      when X-Forwarded-Proto is missing
        ✓ should return false when http
    .secure
      when X-Forwarded-Proto is present
        ✓ should return false when http
        ✓ should return true when "trust proxy" is enabled
        ✓ should return false when initial proxy is http
        ✓ should return true when initial proxy is https
        when "trust proxy" trusting hop count
          ✓ should respect X-Forwarded-Proto
  req
    .signedCookies
      ✓ should return a signed JSON cookie
  req
    .stale
      ✓ should return false when the resource is not modified
      ✓ should return true when the resource is modified
      ✓ should return true without response headers
  req
    .subdomains
      when present
        ✓ should return an array
        ✓ should work with IPv4 address
        ✓ should work with IPv6 address
      otherwise
        ✓ should return an empty array
      with no host
        ✓ should return an empty array
      with trusted X-Forwarded-Host
        ✓ should return an array
      when subdomain offset is set
        when subdomain offset is zero
          ✓ should return an array with the whole domain
          ✓ should return an array with the whole IPv4
          ✓ should return an array with the whole IPv6
        when present
          ✓ should return an array
        otherwise
          ✓ should return an empty array
  req
    .xhr
      ✓ should return true when X-Requested-With is xmlhttprequest
      ✓ should case-insensitive
      ✓ should return false otherwise
      ✓ should return false when not present
  res
    .append(field, val)
      ✓ should append multiple headers
      ✓ should accept array of values
      ✓ should get reset by res.set(field, val)
      ✓ should work with res.set(field, val) first
      ✓ should work with cookies
  res
    .attachment()
      ✓ should Content-Disposition to attachment
    .attachment(filename)
      ✓ should add the filename param
      ✓ should set the Content-Type
    .attachment(utf8filename)
      ✓ should add the filename and filename* params
      ✓ should set the Content-Type
  res
    .clearCookie(name)
      ✓ should set a cookie passed expiry
    .clearCookie(name, options)
      ✓ should set the given params
  res
    .cookie(name, object)
      ✓ should generate a JSON cookie
    .cookie(name, string)
      ✓ should set a cookie
      ✓ should allow multiple calls
    .cookie(name, string, options)
      ✓ should set params
      maxAge
        ✓ should set relative expires
        ✓ should set max-age
        ✓ should not mutate the options object
      signed
        ✓ should generate a signed JSON cookie
      signed without secret
        ✓ should throw an error
      .signedCookie(name, string)
        ✓ should set a signed cookie
  res
    .download(path)
      ✓ should transfer as an attachment
    .download(path, filename)
      ✓ should provide an alternate filename
    .download(path, fn)
      ✓ should invoke the callback
    .download(path, filename, fn)
      ✓ should invoke the callback
    .download(path, filename, options, fn)
      ✓ should invoke the callback
      1) should allow options to res.sendFile()
      when options.headers contains Content-Disposition
        ✓ should should be ignored
        ✓ should should be ignored case-insensitively
    on failure
      ✓ should invoke the callback
      ✓ should remove Content-Disposition
  res
    .format(obj)
      with canonicalized mime types
        ✓ should utilize qvalues in negotiation
        ✓ should allow wildcard type/subtypes
        ✓ should default the Content-Type
        ✓ should set the correct charset for the Content-Type
        ✓ should Vary: Accept
        when Accept is not present
          ✓ should invoke the first callback
        when no match is made
          ✓ should should respond with 406 not acceptable
      with extnames
        ✓ should utilize qvalues in negotiation
        ✓ should allow wildcard type/subtypes
        ✓ should default the Content-Type
        ✓ should set the correct charset for the Content-Type
        ✓ should Vary: Accept
        when Accept is not present
          ✓ should invoke the first callback
        when no match is made
          ✓ should should respond with 406 not acceptable
      with parameters
        ✓ should utilize qvalues in negotiation
        ✓ should allow wildcard type/subtypes
        ✓ should default the Content-Type
        ✓ should set the correct charset for the Content-Type
        ✓ should Vary: Accept
        when Accept is not present
          ✓ should invoke the first callback
        when no match is made
          ✓ should should respond with 406 not acceptable
      given .default
        ✓ should be invoked instead of auto-responding
        ✓ should work when only .default is provided
      in router
        ✓ should utilize qvalues in negotiation
        ✓ should allow wildcard type/subtypes
        ✓ should default the Content-Type
        ✓ should set the correct charset for the Content-Type
        ✓ should Vary: Accept
        when Accept is not present
          ✓ should invoke the first callback
        when no match is made
          ✓ should should respond with 406 not acceptable
      in router
        ✓ should utilize qvalues in negotiation
        ✓ should allow wildcard type/subtypes
        ✓ should default the Content-Type
        ✓ should set the correct charset for the Content-Type
        ✓ should Vary: Accept
        when Accept is not present
          ✓ should invoke the first callback
        when no match is made
          ✓ should should respond with 406 not acceptable
  res
    .get(field)
      ✓ should get the response header field
  res
    .json(object)
      ✓ should not support jsonp callbacks
      ✓ should not override previous Content-Types
      when given primitives
        ✓ should respond with json for null (21ms)
        ✓ should respond with json for Number
        ✓ should respond with json for String
      when given an array
        ✓ should respond with json
      when given an object
        ✓ should respond with json
      "json escape" setting
        ✓ should be undefined by default
        ✓ should unicode escape HTML-sniffing characters
      "json replacer" setting
        ✓ should be passed to JSON.stringify()
      "json spaces" setting
        ✓ should be undefined by default
        ✓ should be passed to JSON.stringify()
    .json(status, object)
      ✓ should respond with json and set the .statusCode
    .json(object, status)
      ✓ should respond with json and set the .statusCode for backwards compat
      ✓ should use status as second number for backwards compat
  res
    ✓ should not override previous Content-Types (18ms)
    .jsonp(object)
      ✓ should respond with jsonp
      ✓ should use first callback parameter with jsonp
      ✓ should ignore object callback parameter with jsonp
      ✓ should allow renaming callback
      ✓ should allow []
      ✓ should disallow arbitrary js
      ✓ should escape utf whitespace
      ✓ should not escape utf whitespace for json fallback
      ✓ should include security header and prologue
      ✓ should not override previous Content-Types with no callback
      ✓ should override previous Content-Types with callback
      when given primitives
        ✓ should respond with json
      when given an array
        ✓ should respond with json
      when given an object
        ✓ should respond with json
      when given primitives
        ✓ should respond with json for null
        ✓ should respond with json for Number
        ✓ should respond with json for String
      "json escape" setting
        ✓ should be undefined by default
        ✓ should unicode escape HTML-sniffing characters
      "json replacer" setting
        ✓ should be passed to JSON.stringify()
      "json spaces" setting
        ✓ should be undefined by default
        ✓ should be passed to JSON.stringify()
    .jsonp(status, object)
      ✓ should respond with json and set the .statusCode
    .jsonp(object, status)
      ✓ should respond with json and set the .statusCode for backwards compat
      ✓ should use status as second number for backwards compat
  res
    .links(obj)
      ✓ should set Link header field
      ✓ should set Link header field for multiple calls
  res
    ✓ should work when mounted
    .locals
      ✓ should be empty by default
  res
    .location(url)
      ✓ should set the header
      ✓ should encode "url"
      ✓ should not touch already-encoded sequences in "url"
      when url is "back"
        ✓ should set location from "Referer" header
        ✓ should set location from "Referrer" header
        ✓ should prefer "Referrer" header
        ✓ should set the header to "/" without referrer
  res
    .redirect(url)
      ✓ should default to a 302 redirect
      ✓ should encode "url"
      ✓ should not touch already-encoded sequences in "url"
    .redirect(status, url)
      ✓ should set the response status
    .redirect(url, status)
      ✓ should set the response status
    when the request method is HEAD
      ✓ should ignore the body
    when accepting html
      ✓ should respond with html
      ✓ should escape the url
      ✓ should include the redirect type
    when accepting text
      ✓ should respond with text
      ✓ should encode the url
      ✓ should include the redirect type
    when accepting neither text or html
      ✓ should respond with an empty body
  res
    .render(name)
      ✓ should support absolute paths
      ✓ should support absolute paths with "view engine"
      ✓ should error without "view engine" set and file extension to a non-engine module
      ✓ should error without "view engine" set and no file extension
      ✓ should expose app.locals
      ✓ should expose app.locals with `name` property
      ✓ should support index.<engine>
      when an error occurs
        ✓ should next(err)
      when "view engine" is given
        ✓ should render the template
      when "views" is given
        ✓ should lookup the file in the path
        when array of paths
          ✓ should lookup the file in the path
          ✓ should lookup in later paths until found
    .render(name, option)
      ✓ should render the template
      ✓ should expose app.locals
      ✓ should expose res.locals
      ✓ should give precedence to res.locals over app.locals
      ✓ should give precedence to res.render() locals over res.locals
      ✓ should give precedence to res.render() locals over app.locals
    .render(name, options, fn)
      ✓ should pass the resulting string
    .render(name, fn)
      ✓ should pass the resulting string
      when an error occurs
        ✓ should pass it to the callback
  res
    ✓ should always check regardless of length
    ✓ should respond with 304 Not Modified when fresh
    ✓ should not perform freshness check unless 2xx or 304
    ✓ should not support jsonp callbacks
    ✓ should be chainable
    .send()
      ✓ should set body to ""
    .send(null)
      ✓ should set body to ""
    .send(undefined)
      ✓ should set body to ""
    .send(code)
      ✓ should set .statusCode
    .send(code, body)
      ✓ should set .statusCode and body
    .send(body, code)
      ✓ should be supported for backwards compat
    .send(code, number)
      ✓ should send number as json
    .send(String)
      ✓ should send as html
      ✓ should set ETag
      ✓ should not override Content-Type
      ✓ should override charset in Content-Type
      ✓ should keep charset in Content-Type for Buffers
    .send(Buffer)
      2) should send as octet-stream
      ✓ should set ETag
      ✓ should not override Content-Type
      ✓ should not override ETag
    .send(Object)
      ✓ should send as application/json
    when the request method is HEAD
      ✓ should ignore the body (16ms)
    when .statusCode is 204
      ✓ should strip Content-* fields, Transfer-Encoding field, and body
    when .statusCode is 304
      ✓ should strip Content-* fields, Transfer-Encoding field, and body
    "etag" setting
      when enabled
        ✓ should send ETag
        ✓ should send ETag in response to ACL request
        ✓ should send ETag in response to BIND request
        ✓ should send ETag in response to CHECKOUT request
        ✓ should send ETag in response to COPY request
        ✓ should send ETag in response to DELETE request
        ✓ should send ETag in response to GET request
        ✓ should send ETag in response to HEAD request
        ✓ should send ETag in response to LINK request
        ✓ should send ETag in response to LOCK request
        ✓ should send ETag in response to M-SEARCH request
        ✓ should send ETag in response to MERGE request
        ✓ should send ETag in response to MKACTIVITY request
        ✓ should send ETag in response to MKCALENDAR request
        ✓ should send ETag in response to MKCOL request
        ✓ should send ETag in response to MOVE request
        ✓ should send ETag in response to NOTIFY request
        ✓ should send ETag in response to OPTIONS request
        ✓ should send ETag in response to PATCH request
        ✓ should send ETag in response to POST request
        ✓ should send ETag in response to PROPFIND request
        ✓ should send ETag in response to PROPPATCH request
        ✓ should send ETag in response to PURGE request
        ✓ should send ETag in response to PUT request
        ✓ should send ETag in response to REBIND request
        ✓ should send ETag in response to REPORT request
        ✓ should send ETag in response to SEARCH request
        ✓ should send ETag in response to SUBSCRIBE request
        ✓ should send ETag in response to TRACE request
        ✓ should send ETag in response to UNBIND request
        ✓ should send ETag in response to UNLINK request
        ✓ should send ETag in response to UNLOCK request
        ✓ should send ETag in response to UNSUBSCRIBE request
        ✓ should send ETag for empty string response
        ✓ should send ETag for long response
        ✓ should not override ETag when manually set
        ✓ should not send ETag for res.send()
      when disabled
        ✓ should send no ETag
        ✓ should send ETag when manually set
      when "strong"
        ✓ should send strong ETag
      when "weak"
        ✓ should send weak ETag
      when a function
        ✓ should send custom ETag
        ✓ should not send falsy ETag
  res
    .sendFile(path)
      ✓ should error missing path
      ✓ should transfer a file
      ✓ should transfer a file with special characters in string
      ✓ should include ETag
      ✓ should 304 when ETag matches
      ✓ should 404 for directory
      ✓ should 404 when not found
      ✓ should not override manual content-types
      ✓ should not error if the client aborts
      with "cacheControl" option
        ✓ should enable cacheControl by default
        ✓ should accept cacheControl option
      with "dotfiles" option
        ✓ should not serve dotfiles by default
        3) should accept dotfiles option
      with "headers" option
        ✓ should accept headers option
        ✓ should ignore headers option on 404
      with "immutable" option
        ✓ should add immutable cache-control directive
      with "maxAge" option
        ✓ should set cache-control max-age from number
        ✓ should set cache-control max-age from string
      with "root" option
        ✓ should not transfer relative with without
        ✓ should serve relative to "root"
        ✓ should disallow requesting out of "root"
    .sendFile(path, fn)
      ✓ should invoke the callback when complete
      ✓ should invoke the callback when client aborts
      ✓ should invoke the callback when client already aborted
      ✓ should invoke the callback without error when HEAD
      ✓ should invoke the callback without error when 304
      ✓ should invoke the callback on 404
    .sendFile(path, options)
      ✓ should pass options to send module
    .sendfile(path, fn)
      ✓ should invoke the callback when complete
      ✓ should utilize the same options as express.static()
      ✓ should invoke the callback when client aborts
      ✓ should invoke the callback when client already aborted
      ✓ should invoke the callback without error when HEAD
      ✓ should invoke the callback without error when 304
      ✓ should invoke the callback on 404
      ✓ should not override manual content-types
      ✓ should invoke the callback on 403
      ✓ should invoke the callback on socket error
    .sendfile(path)
      ✓ should not serve dotfiles
      4) should accept dotfiles option
      ✓ should accept headers option (11ms)
      ✓ should ignore headers option on 404
      ✓ should transfer a file
      ✓ should transfer a directory index file
      ✓ should 404 for directory without trailing slash
      ✓ should transfer a file with urlencoded name
      ✓ should not error if the client aborts
      with an absolute path
        ✓ should transfer the file
      with a relative path
        ✓ should transfer the file
        ✓ should serve relative to "root"
        ✓ should consider ../ malicious when "root" is not set
        ✓ should allow ../ when "root" is set
        ✓ should disallow requesting out of "root"
        ✓ should next(404) when not found
        with non-GET
          ✓ should still serve
  .sendfile(path, options)
    ✓ should pass options to send module
  res
    .sendStatus(statusCode)
      ✓ should send the status code and message as body
      ✓ should work with unknown code
  res
    .set(field, value)
      ✓ should set the response header field
      ✓ should coerce to a string
    .set(field, values)
      ✓ should set multiple response header fields
      ✓ should coerce to an array of strings
      ✓ should not set a charset of one is already set
      ✓ should throw when Content-Type is an array
    .set(object)
      ✓ should set multiple fields
      ✓ should coerce to a string
  res
    .status(code)
      ✓ should set the response .statusCode
  res
    .type(str)
      ✓ should set the Content-Type based on a filename
      ✓ should default to application/octet-stream
      ✓ should set the Content-Type with type/subtype
  res.vary()
    with no arguments
      ✓ should not set Vary
    with an empty array
      ✓ should not set Vary
    with an array
      ✓ should set the values
    with a string
      ✓ should set the value
    when the value is present
      ✓ should not add it again
  utils.etag(body, encoding)
    ✓ should support strings
    ✓ should support utf8 strings
    ✓ should support buffer
    ✓ should support empty string
  utils.setCharset(type, charset)
    ✓ should do anything without type
    ✓ should return type if not given charset
    ✓ should keep charset if not given charset
    ✓ should set charset
    ✓ should override charset
  utils.wetag(body, encoding)
    ✓ should support strings
    ✓ should support utf8 strings
    ✓ should support buffer
    ✓ should support empty string
  utils.isAbsolute()
    ✓ should support windows
    ✓ should support windows unc
    ✓ should support unices
  utils.flatten(arr)
    ✓ should flatten an array
  auth
    GET /
      ✓ should redirect to /login
    GET /login
      ✓ should render login form
      ✓ should display login error
    GET /logout
      ✓ should redirect to /
    GET /restricted
      ✓ should redirect to /login without cookie
      ✓ should succeed with proper cookie (75ms)
    POST /login
      ✓ should fail without proper username
      ✓ should fail without proper password (70ms)
      ✓ should succeed with proper credentials (71ms)
  content-negotiation
    GET /
      ✓ should default to text/html
      ✓ should accept to text/plain
      ✓ should accept to application/json
    GET /users
      ✓ should default to text/html
      ✓ should accept to text/plain
      ✓ should accept to application/json
  cookie-sessions
    GET /
      ✓ should display no views
      ✓ should set a session cookie
      ✓ should display 1 view on revisit
  cookies
    GET /
      ✓ should have a form
      ✓ should respond with no cookies
      ✓ should respond to cookie
    GET /forget
      ✓ should clear cookie
    POST /
      ✓ should set a cookie
      ✓ should no set cookie w/o reminder
  downloads
    GET /
      ✓ should have a link to amazing.txt
    GET /files/amazing.txt
      ✓ should have a download header
    GET /files/missing.txt
      ✓ should respond with 404
  ejs
    GET /
      ✓ should respond with html
  error-pages
    GET /
      ✓ should respond with page list
    Accept: text/html
      GET /403
        ✓ should respond with 403
      GET /404
        ✓ should respond with 404
      GET /500
        ✓ should respond with 500
    Accept: application/json
      GET /403
        ✓ should respond with 403
      GET /404
        ✓ should respond with 404
      GET /500
        ✓ should respond with 500
    Accept: text/plain
      GET /403
        ✓ should respond with 403
      GET /404
        ✓ should respond with 404
      GET /500
        ✓ should respond with 500
  error
    GET /
      ✓ should respond with 500
    GET /next
      ✓ should respond with 500
    GET /missing
      ✓ should respond with 404
  markdown
    GET /
      ✓ should respond with html (20ms)
    GET /fail
      ✓ should respond with an error
  multi-router
    GET /
      ✓ should respond with root handler
    GET /api/v1/
      ✓ should respond with APIv1 root handler
    GET /api/v1/users
      ✓ should respond with users from APIv1
    GET /api/v2/
      ✓ should respond with APIv2 root handler
    GET /api/v2/users
      ✓ should respond with users from APIv2
  mvc
    GET /
      ✓ should redirect to /users
    GET /pet/0
      ✓ should get pet
    GET /pet/0/edit
      ✓ should get pet edit page
    PUT /pet/2
      ✓ should update the pet
    GET /users
      ✓ should display a list of users (33ms)
    GET /user/:id
      when present
        ✓ should display the user (14ms)
        ✓ should display the users pets
      when not present
        ✓ should 404
    GET /user/:id/edit
      ✓ should display the edit form
    PUT /user/:id
      ✓ should 500 on error
      ✓ should update the user
    POST /user/:id/pet
      ✓ should create a pet for user (15ms)
  params
    GET /
      ✓ should respond with instructions
    GET /user/0
      ✓ should respond with a user
    GET /user/9
      ✓ should fail to find user
    GET /users/0-2
      ✓ should respond with three users
    GET /users/foo-bar
      ✓ should fail integer parsing
  resource
    GET /
      ✓ should respond with instructions
    GET /users
      ✓ should respond with all users
    GET /users/1
      ✓ should respond with user 1
    GET /users/9
      ✓ should respond with error
    GET /users/1..3
      ✓ should respond with users 1 through 3
    DELETE /users/1
      ✓ should delete user 1
    DELETE /users/9
      ✓ should fail
    GET /users/1..3.json
      ✓ should respond with users 2 and 3 as json
  route-map
    GET /users
      ✓ should respond with users
    DELETE /users
      ✓ should delete users
    GET /users/:id
      ✓ should get a user
    GET /users/:id/pets
      ✓ should get a users pets
    GET /users/:id/pets/:pid
      ✓ should get a users pet
  route-separation
    GET /
      ✓ should respond with index
    GET /users
      ✓ should list users
    GET /user/:id
      ✓ should get a user
      ✓ should 404 on missing user
    GET /user/:id/view
      ✓ should get a user
      ✓ should 404 on missing user
    GET /user/:id/edit
      ✓ should get a user to edit
    PUT /user/:id/edit
      ✓ should edit a user
    POST /user/:id/edit?_method=PUT
      ✓ should edit a user
    GET /posts
      ✓ should get a list of posts
  vhost
    example.com
      GET /
        ✓ should say hello
      GET /foo
        ✓ should say foo
    foo.example.com
      GET /
        ✓ should redirect to /foo
    bar.example.com
      GET /
        ✓ should redirect to /bar
  web-service
    GET /api/users
      without an api key
        ✓ should respond with 400 bad request
      with an invalid api key
        ✓ should respond with 401 unauthorized
      with a valid api key
        ✓ should respond users json
    GET /api/repos
      without an api key
        ✓ should respond with 400 bad request
      with an invalid api key
        ✓ should respond with 401 unauthorized
      with a valid api key
        ✓ should respond repos json
    GET /api/user/:name/repos
      without an api key
        ✓ should respond with 400 bad request
      with an invalid api key
        ✓ should respond with 401 unauthorized
      with a valid api key
        ✓ should respond user repos json
        ✓ should 404 with unknown user
    when requesting an invalid route
      ✓ should respond with 404 json
  851 passing (4s)
  4 failing
  1) res .download(path, filename, options, fn) should allow options to res.sendFile():
     TypeError: Arguments must be Buffers
      at Function.compare (buffer.js:272:11)
      at test/res.download.js:194:31
      at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)
      at Test.assert (node_modules/supertest/lib/test.js:173:18)
      at Server.localAssert (node_modules/supertest/lib/test.js:131:12)
      at emitCloseNT (net.js:1541:8)
      at _combinedTickCallback (internal/process/next_tick.js:71:11)
      at process._tickCallback (internal/process/next_tick.js:98:9)
  2) res .send(Buffer) should send as octet-stream:
     TypeError: Arguments must be Buffers
      at Function.compare (buffer.js:272:11)
      at test/res.send.js:586:31
      at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)
      at Test.assert (node_modules/supertest/lib/test.js:173:18)
      at Server.localAssert (node_modules/supertest/lib/test.js:131:12)
      at emitCloseNT (net.js:1541:8)
      at _combinedTickCallback (internal/process/next_tick.js:71:11)
      at process._tickCallback (internal/process/next_tick.js:98:9)
  3) res .sendFile(path) with "dotfiles" option should accept dotfiles option:
     TypeError: Arguments must be Buffers
      at Function.compare (buffer.js:272:11)
      at test/res.sendFile.js:807:31
      at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)
      at Test.assert (node_modules/supertest/lib/test.js:173:18)
      at Server.localAssert (node_modules/supertest/lib/test.js:131:12)
      at emitCloseNT (net.js:1541:8)
      at _combinedTickCallback (internal/process/next_tick.js:71:11)
      at process._tickCallback (internal/process/next_tick.js:98:9)
  4) res .sendfile(path) should accept dotfiles option:
     TypeError: Arguments must be Buffers
      at Function.compare (buffer.js:272:11)
      at test/res.sendFile.js:807:31
      at Test._assertFunction (node_modules/supertest/lib/test.js:283:11)
      at Test.assert (node_modules/supertest/lib/test.js:173:18)
      at Server.localAssert (node_modules/supertest/lib/test.js:131:12)
      at emitCloseNT (net.js:1541:8)
      at _combinedTickCallback (internal/process/next_tick.js:71:11)
      at process._tickCallback (internal/process/next_tick.js:98:9)
=============================================================================
Writing coverage object [/home/travis/build/expressjs/express/coverage/coverage.json]
Writing coverage reports at [/home/travis/build/expressjs/express/coverage]
=============================================================================
=============================== Coverage summary ===============================
Statements   : 98.71% ( 1908/1933 ), 37 ignored
Branches     : 94.32% ( 747/792 ), 21 ignored
Functions    : 100% ( 267/267 )
Lines        : 99.95% ( 1865/1866 )
================================================================================
npm ERR! Linux 4.4.0-112-generic
npm ERR! argv "/home/travis/.nvm/versions/node/v5.12.0/bin/node" "/home/travis/.nvm/versions/node/v5.12.0/bin/npm" "run" "test-ci"
npm ERR! node v5.12.0
npm ERR! npm  v3.8.6
npm ERR! code ELIFECYCLE
npm ERR! express@4.16.3 test-ci: `istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/`
npm ERR! Exit status 4
npm ERR! 
npm ERR! Failed at the express@4.16.3 test-ci script 'istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the express package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs express
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls express
npm ERR! There is likely additional logging output above.
npm ERR! Please include the following file with any support request:
npm ERR!     /home/travis/build/expressjs/express/npm-debug.log
The command "npm run test-ci" exited with 1.
2.18s$ npm run lint
> express@4.16.3 lint /home/travis/build/expressjs/express
> eslint .