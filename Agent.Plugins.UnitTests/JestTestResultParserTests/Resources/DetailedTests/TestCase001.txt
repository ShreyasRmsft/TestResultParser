2018-12-05T06:08:47.1113748Z ##[section]Starting: PowerShell Script
2018-12-05T06:08:47.1123773Z ==============================================================================
2018-12-05T06:08:47.1123846Z Task         : PowerShell
2018-12-05T06:08:47.1123886Z Description  : Run a PowerShell script on Windows, macOS, or Linux.
2018-12-05T06:08:47.1123940Z Version      : 2.140.2
2018-12-05T06:08:47.1123978Z Author       : Microsoft Corporation
2018-12-05T06:08:47.1127947Z Help         : [More Information](https://go.microsoft.com/fwlink/?LinkID=613736)
2018-12-05T06:08:47.1128016Z ==============================================================================
2018-12-05T06:08:48.7535141Z Generating script.
2018-12-05T06:08:48.9466037Z ##[command]"C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" -NoLogo -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command ". 'D:\a\_temp\e590e422-4b52-413a-9c17-04ce55be599f.ps1'"
2018-12-05T06:09:51.2603909Z 
2018-12-05T06:09:51.2604697Z > deasync@0.1.13 install D:\a\1\s\node_modules\deasync
2018-12-05T06:09:51.2605077Z > node ./build.js
2018-12-05T06:09:51.2605211Z 
2018-12-05T06:09:51.4493074Z `win32-x64-node-8` exists; testing
2018-12-05T06:09:52.1025558Z Binary is fine; exiting
2018-12-05T06:09:53.2124946Z npm WARN nodejs-application@0.0.0 No repository field.
2018-12-05T06:09:53.2125523Z npm WARN nodejs-application@0.0.0 No license field.
2018-12-05T06:09:53.2127963Z npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):
2018-12-05T06:09:53.2128269Z npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32","arch":"x64"})
2018-12-05T06:09:53.2129617Z 
2018-12-05T06:09:53.2163931Z added 747 packages from 400 contributors and audited 18718 packages in 43.077s
2018-12-05T06:09:53.2172962Z found 13 vulnerabilities (9 low, 4 high)
2018-12-05T06:09:53.2173177Z   run `npm audit fix` to fix them, or `npm audit` for details
2018-12-05T06:09:54.0588022Z 
2018-12-05T06:09:54.0588733Z > nodejs-application@0.0.0 test D:\a\1\s
2018-12-05T06:09:54.0588919Z > jest --verbose
2018-12-05T06:09:54.0589064Z 
2018-12-05T06:09:57.1127209Z FAIL unit_tests/sample.test.js
2018-12-05T06:09:57.1133133Z   first set
2018-12-05T06:09:57.1149090Z     ΓêÜ Test method 2 (33ms)
2018-12-05T06:09:57.1433508Z     ├ù Test method 3 (12ms)
2018-12-05T06:09:57.1433773Z     ΓêÜ Test method 4 (1ms)
2018-12-05T06:09:57.1433872Z     ├ù Test method 5 (2ms)
2018-12-05T06:09:57.1433921Z     Γùï skipped 1 test
2018-12-05T06:09:57.1433949Z 
2018-12-05T06:09:57.1434068Z   ΓùÅ first set ΓÇ║ Test method 3
2018-12-05T06:09:57.1434096Z 
2018-12-05T06:09:57.1434137Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.1434163Z 
2018-12-05T06:09:57.1434250Z     Expected: false
2018-12-05T06:09:57.1434290Z     Received: true
2018-12-05T06:09:57.1434315Z 
2018-12-05T06:09:57.1434353Z       23 |     test('Test method 3', () => {
2018-12-05T06:09:57.1434393Z       24 |         console.log("bleh");
2018-12-05T06:09:57.1434572Z     > 25 |         expect(true).toBe(false);
2018-12-05T06:09:57.1434611Z          |                      ^
2018-12-05T06:09:57.1434649Z       26 |     });
2018-12-05T06:09:57.1435355Z       27 | 
2018-12-05T06:09:57.1435413Z       28 |     test('Test method 4', () => {
2018-12-05T06:09:57.1435438Z 
2018-12-05T06:09:57.1435478Z       at Object.toBe (unit_tests/sample.test.js:25:22)
2018-12-05T06:09:57.1435518Z 
2018-12-05T06:09:57.1435633Z   ΓùÅ first set ΓÇ║ Test method 5
2018-12-05T06:09:57.1435660Z 
2018-12-05T06:09:57.1435701Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.1435726Z 
2018-12-05T06:09:57.1435818Z     Expected: false
2018-12-05T06:09:57.1435858Z     Received: true
2018-12-05T06:09:57.1435882Z 
2018-12-05T06:09:57.1435918Z       31 | 
2018-12-05T06:09:57.1436038Z       32 |     test('Test method 5', () => {
2018-12-05T06:09:57.1436080Z     > 33 |         expect(true).toBe(false);
2018-12-05T06:09:57.1437952Z          |                      ^
2018-12-05T06:09:57.1438068Z       34 |     });
2018-12-05T06:09:57.1438109Z       35 | 
2018-12-05T06:09:57.1438149Z       36 |     afterEach(() => {
2018-12-05T06:09:57.1438176Z 
2018-12-05T06:09:57.1438218Z       at Object.toBe (unit_tests/sample.test.js:33:22)
2018-12-05T06:09:57.1438302Z 
2018-12-05T06:09:57.1438434Z   console.log unit_tests/sample.test.js:10
2018-12-05T06:09:57.1438912Z     before bleh
2018-12-05T06:09:57.1438942Z 
2018-12-05T06:09:57.1439050Z   console.log unit_tests/sample.test.js:19
2018-12-05T06:09:57.1439088Z     bleh
2018-12-05T06:09:57.1439112Z 
2018-12-05T06:09:57.1439152Z   console.log unit_tests/sample.test.js:10
2018-12-05T06:09:57.1439279Z     before bleh
2018-12-05T06:09:57.1439306Z 
2018-12-05T06:09:57.1439345Z   console.log unit_tests/sample.test.js:24
2018-12-05T06:09:57.1439382Z     bleh
2018-12-05T06:09:57.1592900Z 
2018-12-05T06:09:57.1593119Z   console.log unit_tests/sample.test.js:10
2018-12-05T06:09:57.1593189Z     before bleh
2018-12-05T06:09:57.1593215Z 
2018-12-05T06:09:57.1593255Z   console.log unit_tests/sample.test.js:10
2018-12-05T06:09:57.1593311Z     before bleh
2018-12-05T06:09:57.1593336Z 
2018-12-05T06:09:57.4057316Z   console.log unit_tests/sample2.test.js:17
2018-12-05T06:09:57.4057676Z     booh
2018-12-05T06:09:57.4057817Z 
2018-12-05T06:09:57.4062685Z FAIL unit_tests/sample2.test.js
2018-12-05T06:09:57.4062848Z   first set
2018-12-05T06:09:57.4063109Z     ├ù Test method 1 (5ms)
2018-12-05T06:09:57.4063448Z     ΓêÜ Test method 2 (2ms)
2018-12-05T06:09:57.4063756Z     ΓêÜ Test method 3
2018-12-05T06:09:57.4064087Z     ├ù Test method 4 (1ms)
2018-12-05T06:09:57.4064395Z     ├ù Test method 5 (1ms)
2018-12-05T06:09:57.4064559Z   second set
2018-12-05T06:09:57.4064942Z     ΓêÜ Test method 1 (1ms)
2018-12-05T06:09:57.4065214Z     ├ù Test method 2
2018-12-05T06:09:57.4065362Z 
2018-12-05T06:09:57.4065765Z   ΓùÅ first set ΓÇ║ Test method 1
2018-12-05T06:09:57.4065919Z 
2018-12-05T06:09:57.4066061Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.4066208Z 
2018-12-05T06:09:57.4066352Z     Expected: false
2018-12-05T06:09:57.4066493Z     Received: true
2018-12-05T06:09:57.4066630Z 
2018-12-05T06:09:57.4066766Z       11 | 
2018-12-05T06:09:57.4066905Z       12 |     test('Test method 1', () => {
2018-12-05T06:09:57.4067061Z     > 13 |         expect(true).toBe(false);
2018-12-05T06:09:57.4067216Z          |                      ^
2018-12-05T06:09:57.4067353Z       14 |     });
2018-12-05T06:09:57.4067490Z       15 | 
2018-12-05T06:09:57.4067651Z       16 |     test('Test method 2', () => {
2018-12-05T06:09:57.4067774Z 
2018-12-05T06:09:57.4067915Z       at Object.toBe (unit_tests/sample2.test.js:13:22)
2018-12-05T06:09:57.4068052Z 
2018-12-05T06:09:57.4068209Z   ΓùÅ first set ΓÇ║ Test method 4
2018-12-05T06:09:57.4068333Z 
2018-12-05T06:09:57.4068473Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.4068626Z 
2018-12-05T06:09:57.4068764Z     Expected: false
2018-12-05T06:09:57.4068900Z     Received: true
2018-12-05T06:09:57.4069020Z 
2018-12-05T06:09:57.4069214Z       24 | 
2018-12-05T06:09:57.4069504Z       25 |     test('Test method 4', () => {
2018-12-05T06:09:57.4069645Z     > 26 |         expect(true).toBe(false);
2018-12-05T06:09:57.4069801Z          |                      ^
2018-12-05T06:09:57.4069938Z       27 |     });
2018-12-05T06:09:57.4070153Z       28 | 
2018-12-05T06:09:57.4070312Z       29 |     test('Test method 5', () => {
2018-12-05T06:09:57.4070446Z 
2018-12-05T06:09:57.4070582Z       at Object.toBe (unit_tests/sample2.test.js:26:22)
2018-12-05T06:09:57.4070698Z 
2018-12-05T06:09:57.4070863Z   ΓùÅ first set ΓÇ║ Test method 5
2018-12-05T06:09:57.4070980Z 
2018-12-05T06:09:57.4071111Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.4071239Z 
2018-12-05T06:09:57.4071369Z     Expected: false
2018-12-05T06:09:57.4071499Z     Received: true
2018-12-05T06:09:57.4072265Z 
2018-12-05T06:09:57.4072422Z       28 | 
2018-12-05T06:09:57.4072558Z       29 |     test('Test method 5', () => {
2018-12-05T06:09:57.4072689Z     > 30 |         expect(true).toBe(false);
2018-12-05T06:09:57.4072834Z          |                      ^
2018-12-05T06:09:57.4072967Z       31 |     });
2018-12-05T06:09:57.4073114Z       32 | 
2018-12-05T06:09:57.4073264Z       33 |     afterEach(() => {
2018-12-05T06:09:57.4073510Z 
2018-12-05T06:09:57.4073647Z       at Object.toBe (unit_tests/sample2.test.js:30:22)
2018-12-05T06:09:57.4073761Z 
2018-12-05T06:09:57.4073958Z   ΓùÅ second set ΓÇ║ Test method 2
2018-12-05T06:09:57.4074074Z 
2018-12-05T06:09:57.4074206Z     expect(received).toBe(expected) // Object.is equality
2018-12-05T06:09:57.4074336Z 
2018-12-05T06:09:57.4074463Z     Expected: false
2018-12-05T06:09:57.4074592Z     Received: true
2018-12-05T06:09:57.4074705Z 
2018-12-05T06:09:57.4074851Z       54 | 
2018-12-05T06:09:57.4074984Z       55 |     test('Test method 2', () => {
2018-12-05T06:09:57.4075129Z     > 56 |         expect(true).toBe(false);
2018-12-05T06:09:57.4075275Z          |                      ^
2018-12-05T06:09:57.4075406Z       57 |     });
2018-12-05T06:09:57.4075534Z       58 | 
2018-12-05T06:09:57.4075680Z       59 |     afterEach(() => {
2018-12-05T06:09:57.4075795Z 
2018-12-05T06:09:57.4075928Z       at Object.toBe (unit_tests/sample2.test.js:56:22)
2018-12-05T06:09:57.4076054Z 
2018-12-05T06:09:57.4094049Z Test Suites: 2 failed, 2 total
2018-12-05T06:09:57.4094123Z Tests:       6 failed, 1 skipped, 5 passed, 12 total
2018-12-05T06:09:57.4094191Z Snapshots:   0 total
2018-12-05T06:09:57.4094231Z Time:        2.614s
2018-12-05T06:09:57.4094270Z Ran all test suites.
2018-12-05T06:09:57.5277920Z npm ERR! Test failed.  See above for more details.
2018-12-05T06:09:57.8284794Z ##[error]PowerShell exited with code '1'.
2018-12-05T06:09:57.8694106Z ##[section]Finishing: PowerShell Script
